# jenkins 에서 target server로 war copy
- name: copy war to target server
  copy:
    #src=/home/deploy/tmp/{{ app_name }}/{{ phase }}/{{ app_name }}.war dest=/tmp/ROOT.war owner=nobody group=nobody mode=0644
    src=/Workspace/ax-boot-framework/ax-boot-admin/target/axboot-admin.war dest=/tmp/ROOT.war owner=nobody group=nobody mode=0644
  sudo: True
  ignore_errors: yes

- name: disable first upstream
  shell: >
    cat /home/deploy/conf/nginx/upstream-deploy1-{{app_name}}.conf > /home/deploy/conf/nginx/upstream-{{app_name}}.conf
  sudo: True

- name: reload nginx
  shell: >
    /home/deploy/scripts/nginx.sh restart
  sudo: True
  ignore_errors: yes

- name: wait upstream reload
  pause: seconds=15

- name: stop tomcat
  shell: >
    /home/deploy/scripts/tomcat.sh {{ app_name }} stop

# gracefully 하게 종료될때 까지 기다림 최대 45 sec
- name: sleep until gracefully shutdown
  stat: path=/var/tomcat/{{ app_name }}/logs/tomcat.pid
  register: is_running
  until: is_running.stat.exists == False
  retries: 10
  delay: 5

- name: delete ROOT directory
  shell: >
    rm -f /var/tomcat/{{ app_name }}/webapps/ROOT.war &&
    rm -rf /var/tomcat/{{ app_name }}/webapps/ROOT
  sudo: True

- name: copy war to catalina home
  shell: cp /tmp/ROOT.war /var/tomcat/{{ app_name }}/webapps/ROOT.war
  sudo: True

- name: restart tomcat
  shell: >
    /home/deploy/scripts/tomcat.sh {{ app_name }} start

# 서비스 재시작 기다림 최대 200sec
- name: sleep until first instance start
  shell: curl http://{{ inventory_hostname }}:{{ tomcat_service_port }}/health
  register: check_result
  until: check_result.stdout == "ok"
  retries: 100
  delay: 5

# second instance 가 존재하면 second_instance 변수 셋팅
- name: check second instance exist
  stat: path=/var/tomcat/{{ app_name_1 }}
  register: second_instance

- name: disable second upstream
  shell: >
    cat /home/deploy/conf/nginx/upstream-deploy2-{{app_name}}.conf > /home/deploy/conf/nginx/upstream-{{app_name}}.conf
  sudo: True

- name: reload nginx
  shell: >
    /home/deploy/scripts/nginx.sh restart
  sudo: True
  ignore_errors: yes

- name: wait upstream reload
  pause: seconds=15

- name: stop tomcat
  shell: >
    /home/deploy/scripts/tomcat.sh {{ app_name_1 }} stop
  when: second_instance.stat.exists == True

- name: sleep until gracefully shutdown
  stat: path=/var/tomcat/{{ app_name_1 }}/logs/tomcat.pid
  register: is_running
  until: is_running.stat.exists == False
  retries: 10
  delay: 5

- name: delete ROOT directory
  shell: >
    rm -f /var/tomcat/{{ app_name_1 }}/webapps/ROOT.war &&
    rm -rf /var/tomcat/{{ app_name_1 }}/webapps/ROOT
  sudo: True
  when: second_instance.stat.exists == True

- name: copy war to catalina home
  shell: cp /tmp/ROOT.war /var/tomcat/{{ app_name_1 }}/webapps/ROOT.war
  sudo: True
  when: second_instance.stat.exists == True

- name: restart tomcat
  shell: >
    /home/deploy/scripts/tomcat.sh {{ app_name_1 }} start
  when: second_instance.stat.exists == True

- name: sleep until second instance start
  shell: curl http://{{ inventory_hostname }}:{{ tomcat_service_port +1 }}/health
  register: check_result
  until: check_result.stdout == "ok"
  retries: 100
  delay: 5
  when: second_instance.stat.exists == True

- name: enable all upstreams
  shell: >
    cat /home/deploy/conf/nginx/upstream-full-{{app_name}}.conf > /home/deploy/conf/nginx/upstream-{{app_name}}.conf
  sudo: True

- name: reload nginx
  shell: >
    /home/deploy/scripts/nginx.sh restart
  sudo: True
  ignore_errors: yes