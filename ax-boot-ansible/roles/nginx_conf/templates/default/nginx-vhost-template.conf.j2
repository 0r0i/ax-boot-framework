upstream {{ app_name }} {
    include upstream-{{app_name}}.conf;
}

upstream {{ app_name }}_instance_1 {
    server 127.0.0.1:{{ tomcat_service_port }};
}

upstream {{ app_name }}_instance_2 {
    server 127.0.0.1:{{ tomcat_service_port + 1 }};
}

server {
    listen 80;
    listen 443 ssl;
    server_name {{server_name}};

    include vhost-location-common.conf;
    include vhost-maintenance.conf;

    # force https-redirects
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }

    charset utf-8;
    client_max_body_size 0;

    ssl on;
    ssl_certificate     cert/{{service_domain}}.crt;
    ssl_certificate_key cert/{{service_domain}}.pkcs8;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers         HIGH:!aNULL:!MD5:!EXPORT;

    access_log logs/{{ app_name }}_access_log main;
    error_log  logs/{{ app_name }}_error_log;

    location / {
        proxy_pass http://{{ app_name }};
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_connect_timeout 2s;
        proxy_read_timeout {{read_timeout}}s;
        proxy_intercept_errors on;
        include proxy-header.conf;
    }

    location /_instance_1 {
        proxy_pass http://{{ app_name }}_instance_1/;
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    location /_instance_2 {
        proxy_pass http://{{ app_name }}_instance_2/;
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    location @proxy {
        proxy_pass http://{{ app_name }};
    }

    location /static/ {
        root /var/tomcat/{{ app_name }}/webapps/ROOT;
        add_header P3P "";
        expires    1y;
        try_files $uri @proxy;
        access_log off;
    }
}
